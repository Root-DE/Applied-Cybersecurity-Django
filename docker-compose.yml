version: '3'

services:
  db:
    image: postgres:latest
    hostname: db
    restart: unless-stopped
    volumes:
      - appsec_pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: $DB_NAME
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASSWORD
    networks:
      - db

  appsec_app:
    image: applied_cybersec:latest
    hostname: appsec_app
    restart: unless-stopped
    # command: python /src/applied_cybersec/manage.py runserver 0.0.0.0:8000
    volumes:
      - ./src:/src
      - statics:/static
    ports:
      - "8000:8000"
    networks:
      - frontend
      - db
    environment:
      WAIT_HOSTS: db:5432
      WAIT_TIMEOUT: 60
      DJANGO_AUTO_RELOAD: true
      DJANGO_SUPERUSER_USERNAME: $DJANGO_SUPERUSER_USERNAME
      DJANGO_SUPERUSER_PASSWORD: $DJANGO_SUPERUSER_PASSWORD
      DJANGO_SUPERUSER_EMAIL: $DJANGO_SUPERUSER_EMAIL
      DB_NAME: $DB_NAME
      DB_USER: $DB_USER
      DB_PASSWORD: $DB_PASSWORD



  nginx:
    image: nginx:latest
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d/:/etc/nginx/conf.d/:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certs:/etc/nginx/certs:ro
      - statics:/static:ro
    networks:
      - frontend      
  
  adminer:
    image: adminer:latest
    hostname: adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - db
    networks:
      - db
  
volumes:
  appsec_pg_data:
  statics:

networks:
  frontend:
  db:

