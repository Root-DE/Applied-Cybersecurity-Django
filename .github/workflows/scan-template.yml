name: Docker Scan

on:
  workflow_call:

env:
  IMAGE_TAG_DEV: $(echo ghcr.io/${{ github.repository }}:staging |  tr '[:upper:]' '[:lower:]')
  IMAGE_TAG_PROD: $(echo ghcr.io/${{ github.repository }}:latest |  tr '[:upper:]' '[:lower:]')

jobs:
  build_and_dev-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: get env
      run: env
    - name: Login to GitHub Container Registry
      run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u root-de --password-stdin
    - uses: actions/checkout@v3
    - name: Build
      run: docker build . -t ${{ env.IMAGE_TAG_DEV }}
    - name: Push
      run: docker push ${{ env.IMAGE_TAG_DEV }}

  scan:
    needs: build_and_dev-deploy
    runs-on: ubuntu-latest
    container: ghcr.io/root-de/applied-cybersecurity/scan:latest
    steps:
    - name: get SBOM
      run: syft ${{ env.IMAGE_TAG_DEV }} -o json --file sbom.json
    - name: get Vulnerabilites
      run: grype sbom.json -o json --file vuln.json
    - name: upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: scan
        path: ./*.json
    - name: notify listener
      run: send_script.sh

  deploy:
    needs: [scan]
    runs-on: ubuntu-latest
    steps:
    - name: Login to GitHub Container Registry
      run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u root-de --password-stdin
    - name: deploy dev image as prod image
      run: docker pull ${{ env.IMAGE_TAG_DEV }}
    - name: tag dev image as prod image
      run: docker tag ${{ env.IMAGE_TAG_DEV }} ${{ env.IMAGE_TAG_PROD }}
    - name: push prod image
      run: docker push ${{ env.IMAGE_TAG_PROD }}
    - name: remove dev image
      run: docker rmi ${{ env.IMAGE_TAG_DEV }}